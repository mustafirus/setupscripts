#!/bin/bash
./scripts/locale_tz
SOFT='Kosher-Config-Generator'
FINGER="# Autogenerated by $SOFT
"
DEST=/

while getopts d: OPT; do
    case "$OPT" in
      d)
        DEBUGMOD="$OPTARG" ;;
      [?])
        # got invalid option
        echo "Usage: $0 [-d module]" >&2
        exit 1 ;;
    esac
done

LANDEV=eth0
[ x$HOSTNAME = xgw ] && LANDEV=lan0
[ x$HOSTNAME = xpm1 ] && LANDEV=vmbr0
IP=$(ip addr show dev $LANDEV 2>/dev/null | awk '/inet .* brd .* scope/{sub(/\/.*/,"",$2); print $2}')  ##'
IFS=. read PNET CNET CSUB CIPN < <(echo $IP)


DHCPHOOKS=/etc/dhcp/dhclient-enter-hooks.d
if [ ! -f $DHCPHOOKS/setdomain ] ; then
    cp -a ./scripts/setdomain $DHCPHOOKS
    ifdown $LANDEV; ifup $LANDEV
fi

FQDN=$(hostname -f)
IFS=. read HOSTNAME CPART CNAME BLA < <(echo $FQDN)

[ "$CPART" = "ovh" ] && PROVIDER_NAMESERVER='213.186.33.99'

[ -r ./$HOSTNAME.conf ] || exit 1

if [ -x /usr/bin/mcedit ]; then
    /usr/bin/mcedit ./$HOSTNAME.conf
else
    /usr/bin/nano ./$HOSTNAME.conf
fi

if [ -z $DEBUGMOD ] ; then
echo "Check setup data"
echo "hostname: $FQDN"
echo "ip:       $IP"
echo -n "Its OK - Continue?(y/N)"
read ok
[ x$ok = xy ] || [ x$ok = xY ] || exit 1
fi

[ x$PNET != 'x10' ] && echo error: not 10.x.x.x network  && exit 1
[ x$BLA != 'xbla' ] && echo error: not bla network  && exit 1
[ -z CNET ] || [ -z CSUB ] || [ -z CPART ] || [ -z CNAME ] && cat <<EOF
Error: Empty VARS!
CNET $CNET
CSUB $CSUB
CPART $CPART 
CNAME $CNAME
EOF

export FQDN HOSTNAME CNET CSUB CPART CNAME SOFT ADMINEMAIL PROVIDER_NAMESERVER



MODULES_ALL=
PACKAGES_ALL=
MOD_MUNUS=
. ./$HOSTNAME.conf
PACKAGES_ALL="$PACKAGES"
for MOD in $MODULES ; do

    if [ "${MOD:0:1}" == "-" ]; then 
	MOD_MINUS="${MOD:1}"
	continue
    fi
    MODULES_ALL="$MODULES_ALL $MOD"
done

. ./common.conf
PACKAGES_ALL="$PACKAGES_ALL $PACKAGES"

for REM in $MOD_MINUS ; do

    MODULES=$(sed -e "s/\b$REM\b//" <<< $MODULES)

done
MODULES_ALL="$MODULES_ALL $MODULES"

if [ -z $DEBUGMOD ] ; then

[ -x ./apt/$HOSTNAME ] && ./apt/$HOSTNAME

apt-get update
apt-get upgrade
apt-get install $PACKAGES_ALL

else
    MODULES_ALL="$DEBUGMOD"
fi

CONF=/tmp/conf

[ -e $CONF ] && rm -rf $CONF
mkdir -p $CONF

(
    cd modules
    for mod in $MODULES_ALL ; do
	cp -a $mod/* $CONF
    done
)

check_dir(){
    DIRNAME=$(dirname $1)
    [ -d $DIRNAME ] || mkdir -p $DIRNAME
}

process_file(){

    [ -z "$1" ] && return
    case ${1##*.} in
	once)
	    FILENAME=${1%.*}
	    PTYPE=once
	    [ -e $DEST/$FILENAME ] && return
	;;
	cp)
	    FILENAME=${1%.*}
	    PTYPE=cp
	;;
	*)
	    FILENAME=$1
	    PTYPE=
	;;
    esac

    F=$FINGER
    if [ "$FILENAME" = "etc/mailname" ] ; then
	F=
    fi
    echo $FILENAME

    check_dir $DEST/$FILENAME

    case $PTYPE in
	once)
	    F=
	    [ -e $DEST/$FILENAME ] && return
	;;
	cp)
	    cp -a $CONF/$1 $DEST/$FILENAME
	    return
	;;
    esac
eval "cat <<EOF >$DEST/$FILENAME
$F$(cat $CONF/$1)
EOF"
chmod --reference=$CONF/$1 $DEST/$FILENAME
}


(cd $CONF
find * -type l ) | while read FILE
do
    check_dir $DEST/$FILE
    cp -af $CONF/$FILE $DEST/$FILE
done

(cd $CONF
find * -type f \! -name 'exec.*' ) | while read FILE
do
    process_file $FILE
done

(cd $CONF
    cat $(find * -type f -name 'exec.*')
) | while read LINE
do
    [ -z "$LINE" ] && continue
    echo "$LINE"
    eval "$LINE"
done

